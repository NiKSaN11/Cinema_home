-- Удаляет таблицы, если есть
SET datestyle TO "ISO, DMY";
SET client_encoding='utf-8';
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS films_directors CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS films_actors CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS actors;



-- Триггер на reviews
CREATE OR REPLACE FUNCTION update_avg_rating()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE films
    SET avg_rating = (SELECT ROUND(AVG(rating), 2)
    FROM reviews
    WHERE reviews.film_id = NEW.film_id
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_avg_rating_trigger
AFTER INSERT OR UPDATE OR DELETE ON reviews
FOR EACH ROW
EXECUTE FUNCTION update_avg_rating();

--Добавление отзыва
INSERT INTO "reviews" (review_id, film_id, user_id, rating, comment)
VALUES
(344, 211, 512, 10, 'Это ШЕДЕВР!!!')










-- Вывести все фильмы и среднюю оценку пользователей
SELECT films.film_id, films.title, 
    (SELECT AVG(rating) AS "Средняя оценка" FROM reviews WHERE reviews.film_id = films.film_id)
FROM films 

-- или
SELECT films.title AS "Название фильма", AVG(reviews.rating) AS "Текущая средняя оценка" 
FROM films INNER JOIN reviews ON films.film_id = reviews.film_id
GROUP BY films.title
ORDER BY "Текущая средняя оценка";